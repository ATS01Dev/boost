{
  "swagger": "2.0",
  "info": {
    "description": "Boost rest APi",
    "version": "2.0",
    "title": "boost rest api",
    "contact": {
      "name": "Ats dev team"
    },
    "license": {}
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Afin Materials",
      "description": "Rest Endpoint for Modules Materials"
    },
    {
      "name": "Afin",
      "description": "Rest Endpoint for Courses Modules"
    }
  ],
  "paths": {
    "/apiAfin/courses": {
      "get": {
        "tags": [
          "course-resource"
        ],
        "summary": "find all courses by page",
        "operationId": "getCoursesPaginateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "size",
            "description": "size",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "in": "body",
            "name": "page",
            "description": "page",
            "required": false,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«Course»"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/courses/": {
      "post": {
        "tags": [
          "course-resource"
        ],
        "summary": "create new course",
        "operationId": "createModuleUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "course",
            "description": "course",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "course-resource"
        ],
        "summary": "update course",
        "operationId": "updateModuleUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "course",
            "description": "course",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/courses/all": {
      "get": {
        "tags": [
          "course-resource"
        ],
        "summary": "find all courses",
        "operationId": "getAllCoursesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Course"
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/courses/{id}": {
      "get": {
        "tags": [
          "course-resource"
        ],
        "summary": "find course by id",
        "operationId": "getCourseUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/courses/{id}/module": {
      "post": {
        "tags": [
          "course-resource"
        ],
        "summary": "add module to course the id param is for course",
        "operationId": "addModuleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "courseModule",
            "description": "courseModule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CourseModule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/discussions": {
      "get": {
        "tags": [
          "discussion-resource"
        ],
        "summary": "find all discussion by page",
        "operationId": "getDiscussionPaginateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "size",
            "description": "size",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "in": "body",
            "name": "page",
            "description": "page",
            "required": false,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«Discussion»"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/discussions/": {
      "post": {
        "tags": [
          "discussion-resource"
        ],
        "summary": "create new discussion",
        "operationId": "createDiscussionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "discussion",
            "description": "discussion",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Discussion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "discussion-resource"
        ],
        "summary": "update discussion",
        "operationId": "updateDiscussionUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "discussion",
            "description": "discussion",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Discussion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Discussion"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/discussions/all": {
      "get": {
        "tags": [
          "discussion-resource"
        ],
        "summary": "find all discussion",
        "operationId": "getAllDiscussionsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Discussion"
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/discussions/{id}": {
      "get": {
        "tags": [
          "discussion-resource"
        ],
        "summary": "find discussion by id",
        "operationId": "getDiscussionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Discussion"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/homeworks": {
      "get": {
        "tags": [
          "homework-resource"
        ],
        "summary": "find all homework by page",
        "operationId": "getCoursesPaginateUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "size",
            "description": "size",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "in": "body",
            "name": "page",
            "description": "page",
            "required": false,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«Homework»"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/homeworks/": {
      "post": {
        "tags": [
          "homework-resource"
        ],
        "summary": "create new homework",
        "operationId": "createHomeworkUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "homework",
            "description": "homework",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Homework"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "homework-resource"
        ],
        "summary": "update homework",
        "operationId": "updateHomeworkUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "homework",
            "description": "homework",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Homework"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Homework"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/homeworks/all": {
      "get": {
        "tags": [
          "homework-resource"
        ],
        "summary": "find all homework",
        "operationId": "getAllCoursesUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Homework"
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/homeworks/{id}": {
      "get": {
        "tags": [
          "homework-resource"
        ],
        "summary": "find course by id",
        "operationId": "getHomeworkUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Homework"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/homeworks/{id}/questions": {
      "post": {
        "tags": [
          "homework-resource"
        ],
        "summary": "add question to homework; id param is for homework",
        "operationId": "addQuestionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "hwQuestion",
            "description": "hwQuestion",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HwQuestion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Homework"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/informations": {
      "get": {
        "tags": [
          "information-resource"
        ],
        "summary": "find all Information by page",
        "operationId": "getTeacherPaginateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "size",
            "description": "size",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "in": "body",
            "name": "page",
            "description": "page",
            "required": false,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«Information»"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/informations/": {
      "post": {
        "tags": [
          "information-resource"
        ],
        "summary": "create new information",
        "operationId": "createInformationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "information",
            "description": "information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Information"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "information-resource"
        ],
        "summary": "update information",
        "operationId": "updateInformationUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "information",
            "description": "information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Information"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Information"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/informations/all": {
      "get": {
        "tags": [
          "information-resource"
        ],
        "summary": "find all information",
        "operationId": "getAllInformationsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Information"
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/informations/{id}": {
      "get": {
        "tags": [
          "information-resource"
        ],
        "summary": "find Information by id",
        "operationId": "getInformationsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Information"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/marks": {
      "get": {
        "tags": [
          "marks-resources"
        ],
        "summary": "find all marks by page",
        "operationId": "getCoursesPaginateUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "size",
            "description": "size",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "in": "body",
            "name": "page",
            "description": "page",
            "required": false,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«Marks»"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/marks/": {
      "post": {
        "tags": [
          "marks-resources"
        ],
        "summary": "create new marks",
        "operationId": "createMarksUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "marks",
            "description": "marks",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Marks"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "marks-resources"
        ],
        "summary": "update marks",
        "operationId": "updateMarksUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "marks",
            "description": "marks",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Marks"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Marks"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/marks/all": {
      "get": {
        "tags": [
          "marks-resources"
        ],
        "summary": "find all marks",
        "operationId": "getAllMarksUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Marks"
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/marks/{id}": {
      "get": {
        "tags": [
          "marks-resources"
        ],
        "summary": "find marks by id",
        "operationId": "getMarksUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Marks"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/materials": {
      "get": {
        "tags": [
          "module-material-resource"
        ],
        "summary": "find all Material by page",
        "operationId": "getMaterialsPageUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "page",
            "description": "page",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "in": "body",
            "name": "size",
            "description": "size",
            "required": false,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«ModuleMaterial»"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/materials/": {
      "post": {
        "tags": [
          "module-material-resource"
        ],
        "summary": "create new materials",
        "operationId": "createMaterialUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "materials",
            "description": "materials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModuleMaterial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "module-material-resource"
        ],
        "summary": "update material",
        "operationId": "updateMaterialUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "moduleMaterial1",
            "description": "moduleMaterial1",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModuleMaterial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModuleMaterial"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/materials/all": {
      "get": {
        "tags": [
          "module-material-resource"
        ],
        "summary": "find all Material",
        "operationId": "getAllMaterialsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleMaterial"
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/materials/{id}": {
      "get": {
        "tags": [
          "module-material-resource"
        ],
        "summary": "find course materials by id",
        "operationId": "getCourseMaterialsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModuleMaterial"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/modules": {
      "get": {
        "tags": [
          "course-module-resource"
        ],
        "summary": "find all modules by page",
        "operationId": "getModulesPageUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "page",
            "description": "page",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "in": "body",
            "name": "size",
            "description": "size",
            "required": false,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«CourseModule»"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/modules/": {
      "post": {
        "tags": [
          "course-module-resource"
        ],
        "summary": "create new modules",
        "operationId": "createModuleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "courseModule",
            "description": "courseModule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CourseModule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "course-module-resource"
        ],
        "summary": "update modules",
        "operationId": "updateModuleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "courseModule",
            "description": "courseModule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CourseModule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CourseModule"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/modules/all": {
      "get": {
        "tags": [
          "course-module-resource"
        ],
        "summary": "find all modules",
        "operationId": "getAllModulesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CourseModule"
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/modules/{id}": {
      "get": {
        "tags": [
          "course-module-resource"
        ],
        "summary": "find course module by id",
        "operationId": "getCourseModuleUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CourseModule"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/modules/{id}/addmaterials": {
      "post": {
        "tags": [
          "course-module-resource"
        ],
        "summary": "create new modules",
        "operationId": "createModuleUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "moduleMaterial",
            "description": "moduleMaterial",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModuleMaterial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/questions": {
      "get": {
        "tags": [
          "question-resources"
        ],
        "summary": "find all questions by page",
        "operationId": "getMaterialsPageUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "page",
            "description": "page",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "in": "body",
            "name": "size",
            "description": "size",
            "required": false,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«HwQuestion»"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/questions/": {
      "post": {
        "tags": [
          "question-resources"
        ],
        "summary": "create new question",
        "operationId": "createModuleUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "question",
            "description": "question",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HwQuestion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "question-resources"
        ],
        "summary": "update question",
        "operationId": "updateQuestionsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "hwQuestion",
            "description": "hwQuestion",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HwQuestion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HwQuestion"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/questions/all": {
      "get": {
        "tags": [
          "question-resources"
        ],
        "summary": "find all questions",
        "operationId": "getAllQuestionsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HwQuestion"
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/questions/{id}": {
      "get": {
        "tags": [
          "question-resources"
        ],
        "summary": "find  questions by id",
        "operationId": "getHomeworkQuestionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HwQuestion"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/students": {
      "get": {
        "tags": [
          "student-resource"
        ],
        "summary": "find all students by page",
        "operationId": "getStudentPaginateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "size",
            "description": "size",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "in": "body",
            "name": "page",
            "description": "page",
            "required": false,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«Student»"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/students/": {
      "post": {
        "tags": [
          "student-resource"
        ],
        "summary": "create new Student",
        "operationId": "createStudentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "student",
            "description": "student",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "student-resource"
        ],
        "summary": "update students",
        "operationId": "updateStudentUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "student",
            "description": "student",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/students/addcourse": {
      "put": {
        "tags": [
          "student-resource"
        ],
        "summary": "find add new course to student courses list",
        "operationId": "addStudentCoursesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "s_id",
            "description": "s_id",
            "required": false,
            "schema": {
              "type": "long"
            }
          },
          {
            "in": "body",
            "name": "c_id",
            "description": "c_id",
            "required": false,
            "schema": {
              "type": "long"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/students/all": {
      "get": {
        "tags": [
          "student-resource"
        ],
        "summary": "find all students",
        "operationId": "getAllStudentUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Student"
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/students/{id}": {
      "get": {
        "tags": [
          "student-resource"
        ],
        "summary": "find student by id",
        "operationId": "getStudentUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/teachers": {
      "get": {
        "tags": [
          "teacher-resource"
        ],
        "summary": "find all teachers by page",
        "operationId": "getTeacherPaginateUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "size",
            "description": "size",
            "required": false,
            "schema": {
              "type": "int"
            }
          },
          {
            "in": "body",
            "name": "page",
            "description": "page",
            "required": false,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«Teacher»"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/teachers/": {
      "post": {
        "tags": [
          "teacher-resource"
        ],
        "summary": "create new teachers",
        "operationId": "createTeacherUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "teacher",
            "description": "teacher",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "teacher-resource"
        ],
        "summary": "update teachers",
        "operationId": "updateTeacherUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "teacher",
            "description": "teacher",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/teachers/all": {
      "get": {
        "tags": [
          "teacher-resource"
        ],
        "summary": "find all teachers",
        "operationId": "getAllTeachersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Teacher"
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/teachers/{id}": {
      "get": {
        "tags": [
          "teacher-resource"
        ],
        "summary": "find teachers by id",
        "operationId": "getTecherUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/apiAfin/teachers/{id}/course": {
      "get": {
        "tags": [
          "teacher-resource"
        ],
        "summary": "find teachers courses id param is for teacher",
        "operationId": "getCoursesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Course"
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "LocalDateTime": {
      "properties": {
        "chronology": {
          "$ref": "#/definitions/Chronology"
        },
        "dayOfMonth": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "dayOfYear": {
          "type": "integer",
          "format": "int32"
        },
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "string",
          "enum": [
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ]
        },
        "monthValue": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Page«Teacher»": {
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Teacher"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ModuleMaterial": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "Information": {
      "properties": {
        "date": {
          "$ref": "#/definitions/ZonedDateTime"
        },
        "domaine": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "info": {
          "type": "string"
        },
        "pays": {
          "type": "string"
        },
        "sources": {
          "type": "string"
        },
        "titre": {
          "type": "string"
        }
      }
    },
    "Marks": {
      "properties": {
        "hwQuestion": {
          "$ref": "#/definitions/HwQuestion"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "LocalDate": {
      "properties": {
        "chronology": {
          "$ref": "#/definitions/IsoChronology"
        },
        "dayOfMonth": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "dayOfYear": {
          "type": "integer",
          "format": "int32"
        },
        "era": {
          "$ref": "#/definitions/Era"
        },
        "leapYear": {
          "type": "boolean"
        },
        "month": {
          "type": "integer",
          "format": "int32"
        },
        "monthValue": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ZoneOffset": {
      "properties": {
        "id": {
          "type": "string"
        },
        "rules": {
          "$ref": "#/definitions/ZoneRules"
        },
        "totalSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Solutions": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "registering": {
          "$ref": "#/definitions/ZonedDateTime"
        },
        "text": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "ZonedDateTime": {
      "properties": {
        "chronology": {
          "$ref": "#/definitions/Chronology"
        },
        "dayOfMonth": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "dayOfYear": {
          "type": "integer",
          "format": "int32"
        },
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "string",
          "enum": [
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ]
        },
        "monthValue": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "zone": {
          "$ref": "#/definitions/ZoneId"
        }
      }
    },
    "Page«Marks»": {
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Marks"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CourseModule": {
      "properties": {
        "homework": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Homework"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "moduleMaterials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModuleMaterial"
          }
        },
        "opening": {
          "$ref": "#/definitions/ZonedDateTime"
        },
        "sommary": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Sort": {},
    "Chronology": {
      "properties": {
        "calendarType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "ZoneOffsetTransition": {
      "properties": {
        "dateTimeAfter": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "dateTimeBefore": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "gap": {
          "type": "boolean"
        },
        "instant": {
          "$ref": "#/definitions/Instant"
        },
        "overlap": {
          "type": "boolean"
        }
      }
    },
    "Course": {
      "properties": {
        "closing": {
          "$ref": "#/definitions/ZonedDateTime"
        },
        "courseModules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CourseModule"
          }
        },
        "discussions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Discussion"
          }
        },
        "domain": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "opening": {
          "$ref": "#/definitions/ZonedDateTime"
        },
        "registring": {
          "$ref": "#/definitions/ZonedDateTime"
        },
        "teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Teacher"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ZoneOffsetTransitionRule": {
      "properties": {
        "dayOfMonthIndicator": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "localTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "midnightEndOfDay": {
          "type": "boolean"
        },
        "month": {
          "type": "string",
          "enum": [
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ]
        },
        "timeDefinition": {
          "type": "string",
          "enum": [
            "UTC",
            "WALL",
            "STANDARD"
          ]
        }
      }
    },
    "Page«Information»": {
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Information"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HwQuestion": {
      "properties": {
        "answer": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "proposition1": {
          "type": "string"
        },
        "proposition2": {
          "type": "string"
        },
        "proposition3": {
          "type": "string"
        },
        "proposition4": {
          "type": "string"
        },
        "qmark": {
          "type": "number",
          "format": "double"
        },
        "statement": {
          "type": "string"
        }
      }
    },
    "ZoneId": {
      "properties": {
        "id": {
          "type": "string"
        },
        "rules": {
          "$ref": "#/definitions/ZoneRules"
        }
      }
    },
    "LocalTime": {
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Page«CourseModule»": {
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CourseModule"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TemporalUnit": {
      "properties": {
        "dateBased": {
          "type": "boolean"
        },
        "durationEstimated": {
          "type": "boolean"
        },
        "timeBased": {
          "type": "boolean"
        }
      }
    },
    "Instant": {
      "properties": {
        "epochSecond": {
          "type": "integer",
          "format": "int64"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Teacher": {
      "properties": {
        "birthday": {
          "$ref": "#/definitions/LocalDate"
        },
        "contact": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "level": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "profession": {
          "type": "string"
        },
        "profile": {
          "type": "string"
        },
        "registring": {
          "$ref": "#/definitions/ZonedDateTime"
        },
        "surnames": {
          "type": "string"
        }
      }
    },
    "Duration": {
      "properties": {
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "negative": {
          "type": "boolean"
        },
        "seconds": {
          "type": "integer",
          "format": "int64"
        },
        "units": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemporalUnit"
          }
        },
        "zero": {
          "type": "boolean"
        }
      }
    },
    "IsoChronology": {
      "properties": {
        "calendarType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Page«Discussion»": {
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Discussion"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Student": {
      "properties": {
        "birthday": {
          "$ref": "#/definitions/LocalDate"
        },
        "contact": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "courses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Course"
          }
        },
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "level": {
          "type": "string"
        },
        "marks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Marks"
          }
        },
        "name": {
          "type": "string"
        },
        "profession": {
          "type": "string"
        },
        "profile": {
          "type": "string"
        },
        "registring": {
          "$ref": "#/definitions/ZonedDateTime"
        },
        "surnames": {
          "type": "string"
        }
      }
    },
    "Era": {
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Page«Homework»": {
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Homework"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Page«Course»": {
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Course"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Page«HwQuestion»": {
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HwQuestion"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ZoneRules": {
      "properties": {
        "fixedOffset": {
          "type": "boolean"
        },
        "transitionRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneOffsetTransitionRule"
          }
        },
        "transitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneOffsetTransition"
          }
        }
      }
    },
    "Page«ModuleMaterial»": {
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModuleMaterial"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Discussion": {
      "properties": {
        "ask": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "registering": {
          "$ref": "#/definitions/ZonedDateTime"
        },
        "solutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Solutions"
          }
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Page«Student»": {
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Student"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Homework": {
      "properties": {
        "hwQuestions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HwQuestion"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      }
    }
  }
}